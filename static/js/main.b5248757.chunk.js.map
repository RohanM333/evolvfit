{"version":3,"sources":["data/constants/actionTypes.js","data/actions/dishes.js","data/actions/user.js","Pages/Admin/Admin.jsx","Pages/Login/Login.jsx","Pages/User/User.jsx","Pages/Error/Error.jsx","App.js","data/reducers/index.js","data/reducers/user.js","data/reducers/dishes.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","LOGIN","LOGOUT","data","getDishes","type","payload","login","logout","Admin","dispatch","useDispatch","dishes","useSelector","state","user","useState","id","name","protein","carbs","fats","calories","dishData","setDishData","show","setShow","useEffect","clear","to","onClick","onSubmit","e","preventDefault","Math","floor","random","dish","createDish","className","value","onChange","target","map","Login","setName","pass","setPass","User","search","setSearch","filterDishes","filter","toLowerCase","includes","placeholder","Error","App","exact","path","persistConfig","key","storage","whitelist","rootReducer","combineReducers","permission","action","persistReducer","store","createStore","rootreducer","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5248757.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\n\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\r\n\r\nexport const data = [  \r\n  {\r\n  \"id\" : 1,\r\n  \"name\" : 'APPLE',\r\n  \"protein\" : '1 cal',\r\n  \"carbs\" : '1 cal',\r\n  \"fats\" : '1 cal',\r\n  \"calories\" : '3 cal',\r\n  },\r\n  {\r\n    \"id\" : 2,\r\n    \"name\" : 'CAKE',\r\n    \"protein\" : '2 cal',\r\n    \"carbs\" : '2 cal',\r\n    \"fats\" : '2 cal',\r\n    \"calories\" : '6 cal',\r\n  },\r\n  {\r\n    \"id\" : 3,\r\n    \"name\" : 'CHOCOLATE ',\r\n    \"protein\" : '3 cal',\r\n    \"carbs\" : '3 cal',\r\n    \"fats\" : '3 cal',\r\n    \"calories\" : '9 cal',\r\n  },\r\n  {\r\n    \"id\" : 4,\r\n    \"name\" : 'BANANA',\r\n    \"protein\" : '4 cal',\r\n    \"carbs\" : '4 cal',\r\n    \"fats\" : '4 cal',\r\n    \"calories\" : '12 cal',\r\n  },]\r\n\r\n\r\n\r\nexport const getDishes = () => {\r\n    const action ={ type: FETCH_ALL , payload: data }\r\n    return action\r\n  };\r\n  \r\n  export const createDish = (id , dish) => {\r\n    dish.id =id;\r\n    const action ={ type: CREATE , payload : dish  }\r\n    return action\r\n  };\r\n  \r\n  export const updateDish = (id, dish) => {\r\n    const action ={ type: UPDATE , payload: {id,dish} }\r\n    return action\r\n  };\r\n\r\n  export const deleteDish = (id) => {\r\n    const action ={ type: DELETE , payload: id }\r\n    return action\r\n  };","import { LOGIN , LOGOUT } from '../constants/actionTypes';\r\n\r\nexport const login = () => {\r\n    const action ={  type:LOGIN  }\r\n    return action\r\n};\r\n  \r\nexport const logout = () => {\r\n    const action ={  type:LOGOUT }\r\n    return action\r\n};\r\n  ","import React, { useState, useEffect }from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDishes,createDish,updateDish,deleteDish } from '../../data/actions/dishes';\r\nimport { logout } from '../../data/actions/user';\r\nimport {\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport './admin.css'\r\n\r\nconst Admin = () => {\r\n    const dispatch = useDispatch();\r\n    const dishes = useSelector((state) => state.dishes);\r\n    //localStorage.setItem('dishes',dishes)  \r\n    const user = useSelector((state) => state.user);\r\n    const [dishData, setDishData] = useState({ id: 0 ,name: '', protein: '', carbs: '', fats: '', calories: ''});\r\n    const [show, setShow] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getDishes())\r\n\r\n        setDishData(dishes)      \r\n\r\n    }, [setDishData]);\r\n\r\n\r\n    const clear = () => {\r\n        setDishData({ id: 0 , name: '', protein: '', carbs: '', fats: '', calories: '' });\r\n      };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let id = Math.floor(Math.random()*10000);\r\n\r\n        dispatch(createDish(id,dishData));\r\n        clear();\r\n      };\r\n\r\n    return (user) ? (\r\n    <>\r\n        <div id='admin'>\r\n            <div id='panel'>\r\n                <h1>DASHBOARD</h1>\r\n                <NavLink to= '/' id='logout'  onClick={()=>dispatch(logout())}>Logout</NavLink>\r\n            </div>\r\n\r\n            <div id='form-container'>\r\n                <form id='form' onSubmit={handleSubmit}>\r\n\r\n                    <label> Dish Name: </label><br/>\r\n\r\n                    <input className='input-fields' type=\"text\" id=\"dish\" name=\"dish\" value={dishData.name} \r\n                    onChange={(e) => setDishData({...dishData ,name: e.target.value })} />\r\n\r\n                    <label> Protein: </label><br/>\r\n\r\n                    <input className='input-fields' type=\"text\" id=\"protein\" name=\"protein\" value={dishData.protein} \r\n                    onChange={(e) => setDishData({...dishData ,protein: e.target.value })} />\r\n\r\n                    <label> Carbs: </label><br/>\r\n\r\n                    <input className='input-fields' type=\"text\" id=\"carbs\" name=\"carbs\" value={dishData.carbs} \r\n                    onChange={(e) => setDishData({...dishData ,carbs: e.target.value })}/>\r\n\r\n                    <label> Fats: </label><br/>\r\n\r\n                    <input className='input-fields' type=\"text\" id=\"fats\" name=\"fats\" value={dishData.fats} \r\n                    onChange={(e) => setDishData({...dishData ,fats: e.target.value })}/>\r\n\r\n                    <label> Calories: </label><br/>\r\n\r\n                    <input className='input-fields' type=\"text\" id=\"calories\" name=\"calories\" value={dishData.calories} \r\n                    onChange={(e) => setDishData({...dishData ,calories: e.target.value })}/><br/>\r\n\r\n                    \r\n                    {!show ? <button className='table-button-form' type=\"submit\" >Add Dish</button> : null}\r\n                    \r\n                    \r\n                </form>\r\n\r\n                {show ? <button className='table-button-form'\r\n                        onClick={() => {dispatch(updateDish(dishData.id,dishData));clear();\r\n                                        setShow(false);}}\r\n                        >Edit Dish\r\n                        </button> : null}\r\n            </div>\r\n\r\n            <div>\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DISH</th>\r\n                            <th>PROTEIN</th> \r\n                            <th>CARBS</th>\r\n                            <th>FATS</th>\r\n                            <th>TOTAL CALORIES</th>\r\n                            <th>EDIT DISH</th>\r\n                            <th>DELETE DISH</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {dishes.map((dish) => (\r\n                            <tr key={dish.id}>\r\n                                <td>{dish.name}</td>\r\n                                <td>{dish.protein}</td>\r\n                                <td>{dish.carbs}</td>\r\n                                <td>{dish.fats}</td>\r\n                                <td>{dish.calories}</td>\r\n                                <td><button className='table-button' onClick={() => {setDishData({ id: dish.id , name: dish.name, protein: dish.protein, carbs: dish.carbs, fats: dish.fats, calories: dish.calories }) ; setShow(true);} }>Edit</button></td>\r\n                                <td><button className='table-button'onClick={() => dispatch(deleteDish(dish.id))}>Delete</button></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </>) \r\n    : <> <h1 id='please'>Please Login First</h1> <NavLink to= '/login' id='logout' >Login</NavLink> </>}\r\n\r\n\r\n\r\nexport default Admin\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login,logout } from '../../data/actions/user';\r\nimport {\r\n    NavLink\r\n  } from \"react-router-dom\";\r\n  import './login.css'\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\")\r\n    const [pass, setPass] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        dispatch(logout())\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <div id='login-page'>\r\n            \r\n            <div id='login'>\r\n                <h1>LOGIN</h1>\r\n            </div>\r\n\r\n            <form id='login-form'>      \r\n\r\n                <label className='login-label'>Name:</label>\r\n                <input value ={name} onChange={(e) =>setName(e.target.value)} className='login-input-fields' type=\"text\"/>\r\n            \r\n                <label className='login-label'>Password:</label>\r\n                <input value ={pass} onChange={(e) =>setPass(e.target.value)} className='login-input-fields' type=\"password\"/>\r\n                \r\n            \r\n                \r\n                            \r\n                {\r\n                    (name==='admin' && pass==='admin') ?\r\n                    \r\n                    <NavLink to= '/admin' className='login-button' onClick={()=>dispatch(login())} >Admin</NavLink>\r\n                    :(!name || !pass) ? null : <NavLink to= '/user' className='login-button' onClick={()=>dispatch(login())}>Login</NavLink>\r\n                }\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDishes } from '../../data/actions/dishes';\r\nimport { logout } from '../../data/actions/user';\r\nimport {\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport './user.css'\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const dishes = useSelector((state) => state.dishes);\r\n    const user = useSelector((state) => state.user);\r\n    const [dishData, setDishData] = useState({ id: 0 , name: '', protein: '', carbs: '', fats: '', calories: '' });\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getDishes())\r\n        setDishData(dishes)\r\n    }, [setDishData]);\r\n\r\n    const handleChange = (e) => { \r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const filterDishes = dishes.filter(dish =>(\r\n       dish.name.toLowerCase().includes(search.toLowerCase())\r\n    ))\r\n\r\n\r\n    return  (user) ? (\r\n        <>\r\n        <div id='user'>\r\n            <div id='header'>                \r\n                <NavLink to= '/' id='logout'  onClick={()=>dispatch(logout())}>Logout</NavLink>\r\n            </div>\r\n\r\n            <div>\r\n                <input id='input' type=\"text\" placeholder=\"Search Dish\"  value ={search} onChange={handleChange}/>\r\n            </div>\r\n\r\n            <div className=\"card-container\">\r\n\r\n                {filterDishes.map((dish) => (\r\n                    <div className=\"card\"  key={dish.id} filterDishes={dish}>\r\n                        <div id=\"name\">\r\n                            <h1>{dish.name}</h1>\r\n                        </div>\r\n\r\n                        <div id=\"info\">\r\n                            <h6>Protein:{dish.protein}</h6>\r\n                            <h6>Carbs:{dish.carbs}</h6>\r\n                            <h6>Fats:{dish.fats}</h6>\r\n                            <h6>Total Calories:{dish.calories}</h6>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n               \r\n            </div>\r\n        </div>\r\n        </>)\r\n     : <> <h1 id='please'>Please Login First</h1> <NavLink to= '/login' id='logout' >Login</NavLink> </>}\r\n\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login First</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import './App.css';\nimport Admin from './Pages/Admin/Admin';\nimport Login from './Pages/Login/Login';\nimport User from './Pages/User/User';\nimport Error from './Pages/Error/Error';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n            <Route exact path=\"/admin\">\n              <Admin />\n            </Route>\n            <Route exact path=\"/user\">\n              <User />\n            </Route>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n            <Route path=\"/error\">\n              <Error />\n            </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport user from './user'\r\nimport dishes from './dishes'\r\n\r\nconst persistConfig ={\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user','dishes']\r\n}\r\n\r\nconst rootReducer = combineReducers({ \r\n    user,\r\n    dishes,\r\n });\r\n\r\nexport default persistReducer(persistConfig , rootReducer); \r\n","import { LOGIN ,LOGOUT } from '../constants/actionTypes';\r\n\r\nexport default (permission = false, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return permission = true;\r\n    case LOGOUT:\r\n      return permission = false;\r\n    default:\r\n      return permission;    \r\n  } \r\n};","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\r\n\r\nexport default (dishes = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...dishes, action.payload];\r\n    case UPDATE:\r\n      return dishes.map((dish) => (dish.id === action.payload.id ? action.payload.dish : dish));\r\n    case DELETE:\r\n      return dishes.filter((dish) => dish.id !== action.payload);\r\n    default:\r\n      return dishes;    \r\n  } \r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport rootreducer from './data/reducers/index'\n\n\nconst store = createStore(rootreducer)\nconst persistor = persistStore(store);\n\nReactDOM.render( \n    <Provider store={store}>\n        <PersistGate persistor={persistor}>\n            <App /> \n        </PersistGate>\n    </Provider>\n, document.getElementById('root'));\n\n\n"],"sourceRoot":""}